// Prisma Schema for Railway PostgreSQL
// This replaces the SQLite database with PostgreSQL

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id          String    @id @default(cuid())
  filename    String    @unique
  title       String
  grade_level String?
  subject     String?
  version     String?
  content     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  
  sections    Section[]
  
  @@map("documents")
}

model Section {
  id          String   @id @default(cuid())
  document_id String
  title       String
  content     String
  section_type String? // chapter, unit, lesson, etc.
  order_index Int      @default(0)
  created_at  DateTime @default(now())
  
  document    Document @relation(fields: [document_id], references: [id], onDelete: Cascade)
  topics      Topic[]
  
  @@index([document_id, order_index])
  @@map("sections")
}

model Topic {
  id          String   @id @default(cuid())
  section_id  String
  title       String
  content     String
  topic_type  String?  // instruction, practice, example, etc.
  difficulty  String?  // basic, intermediate, advanced
  order_index Int      @default(0)
  created_at  DateTime @default(now())
  
  section     Section  @relation(fields: [section_id], references: [id], onDelete: Cascade)
  keywords    TopicKeyword[]
  
  @@index([section_id, order_index])
  @@map("topics")
}

model Keyword {
  id         String   @id @default(cuid())
  word       String   @unique
  definition String?
  subject    String?
  created_at DateTime @default(now())
  
  topics     TopicKeyword[]
  
  @@map("keywords")
}

model TopicKeyword {
  topic_id   String
  keyword_id String
  
  topic      Topic   @relation(fields: [topic_id], references: [id], onDelete: Cascade)
  keyword    Keyword @relation(fields: [keyword_id], references: [id], onDelete: Cascade)
  
  @@id([topic_id, keyword_id])
  @@map("topic_keywords")
}
